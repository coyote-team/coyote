h1= title "Descriptions"

= search_form_for record_filter.search, html: {class: "filters"}, url: representations_path, wrapper: :filters, enforce_utf8: false do |f|
  h2 Filter #{Representation.model_name.human(count: 2)}
  label.filter.field.field--accessory
    h3.sr-only Search by caption or description
    = icon :search, class: "field-accessory"
    = f.search_field :text_or_resource_canonical_id_or_resource_name_cont_all, required: false, placeholder: "Search representation text", role: "search"

  .filter
    h3.filter-title#status_label Status
    ul.boolean-list aria-labelled-by="status_label"
      - Coyote::Representation.status_collection.each do |name, status|
        li.boolean-list-item: label
          = check_box_tag "q[status_in][]", status, filter_params.fetch(:status_in, []).include?(status.to_s)
          = name

  .filter
    h3.filter-title#metum_label Metum
    ul.boolean-list aria-labelled-by="metum_label"
      - available_meta.each do |meta|
        li.boolean-list-item: label
          = check_box_tag "q[metum_id_in][]", meta.id, filter_params.fetch(:metum_id_in, []).include?(meta.id.to_s)
          span= meta.name

  h3.sr-only#author_label Created by author
  = f.input :author_id_eq, label: "Created by Author", label_html: {aria: {label: "author_label"}}, collection: users_for_select, as: :select, required: false

  .filter
    = f.submit "Apply Filters", name: nil, class: "button"
    = f.submit "Clear", type: "reset", class: "button button--outline"

.toolbar
  button.button.button--round.filter-toggle data-toggle-target="#representation_search" data-toggle="filters--toggled" type="button"
    = icon(:options, prefix: safe_join(["Filter ", sr_only(Representation.model_name.human(count: 2).downcase)]))

  = applied_filters

  = sort_dropdown do
    = dropdown_option sort_link_to(:name, :asc, "Name, A-Z")
    = dropdown_option sort_link_to(:name, :desc, "Name, Z-A")
    = dropdown_option sort_link_to(:created_at, :desc, "Date imported, recent")
    = dropdown_option sort_link_to(:created_at, :asc, "Date imported, oldest")


= simple_form_for :representation_status_change, url: representation_status_changes_path, html: { class: "filter-view-list", id: "results" } do |form|
  h2.sr-only#results-title
    ' Results:
    - count = record_filter.records.total_count
    = number_with_delimiter count
    '
    = "description".pluralize(count)

  = render "list", form: form, representations: record_filter.records
