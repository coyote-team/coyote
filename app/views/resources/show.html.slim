h1= title(resource.name)

.split-view.split-view--thumbnail
  .split-view-item
    = lightbox_link(resource, alt: resource.best_representation)
    = resource_host_link(resource)

  .split-view-item
    .table-wrapper: table
      caption.sr-only Key value pairs for this resource
      tbody
        tr
          th Coyote ID
          td= resource.id
        tr
          th Priority
          td= resource.priority_flag ? 'High' : 'Low'
        tr
          th Host URIs
          td= list_of(resource, :host_uris) { |uri| link_to(uri, uri, target: "_#{dom_id(resource)}_#{uri.parameterize}") }
        tr
          td colspan=2
            = collapse do
              table
                caption.sr-only Additional key value pairs for this resource
                tbody
                  tr
                    th Source URI
                    td= link_to(nil, resource.source_uri)
                  tr
                    th Canonical ID
                    td= resource.canonical_id
                  tr
                    th= ResourceGroup.human_name(count: resource.resource_groups.size)
                    td= list_of(resource, :resource_groups) do |resource_group|
                      = link_to(resource_group, resource_group)
                  tr
                    th Organization
                    td= link_to(resource.organization, resource.organization)
                  tr
                    th Updated
                    td= resource.updated_at
                  tr
                    th Created
                    td= resource.created_at

= toolbar class: 'toolbar--header', title: "Actions" do
  = toolbar_item
    - if policy(resource).describe?
      = button_link_to "Describe", new_representation_path(resource_id: resource.id), class: 'button--submit', title: 'Create new description for this resource', icon: :message_circle
    - if policy(resource).edit?
      = edit_link_to edit_resource_path(resource), title: "Edit this resource"
    - if policy(ResourceLink).new?
      = button_link_to "Create Link to Another Resource", new_resource_link_path(subject_resource_id: resource.id), icon: :link, title: 'Create new link from this resource to another resource'

  - if can_assign? || can?(:destroy, resource)
    = toolbar_item class: "toolbar-item--end" do
      - if can_only_assign_to_self?
        = assignment_link_for(resource, class: "button button--default")
      - elsif can_assign?
        = render('assign', resource: resource)
      - if can?(:destroy, resource)
        = options_dropdown do
          = dropdown_option do
            = link_to "Delete this resource", resource_path(resource.id), data: {confirm: "Are you sure you want to delete this resource? This cannot be undone.", method: :delete}


h2 Descriptions
- if resource.representations.any?
  = render partial: 'representations', object: resource.representations.by_status_and_ordinality
- else
  p No descriptions have been written for this resource.

h2 Related Resources
- if resource.related_resources.any?
  = render partial: 'related_resources', object: resource.related_resources
- else
  p No other resources have been linked to this resource.

- if can?(:index, Assignment)
  h2 Assignments
  = list_of resource, :active_assignments, item: {class: "list-item--has-link"} do |assignment|
    = link_to assignment.user, assignment, class: "list-item-link"
    - if can?(:destroy, assignment)
      span.list-item-actions= delete_link_to "Are you sure you want to unassign #{assignment.user}?", assignment
